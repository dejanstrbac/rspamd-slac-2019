##enabled=false;
# multiple scanners could be checked, for each we create a configuration block with an arbitrary name
clamav {

  #attachments_only = true

  # Scan mime_parts seperately
  scan_mime_parts = true
  scan_text_mime = true;
  scan_image_mime = false;

  symbol = "CLAM_VIRUS";
  type = "clamav";
  log_clean = true;
  servers = "127.0.0.1:3310";
  
# if `patterns` is specified virus name will be matched against provided regexes and the related
  # symbol will be yielded if a match is found. If no match is found, default symbol is yielded.
  patterns {
    # symbol_name = "pattern";
    CLAM_JUST_EICAR = "^Eicar-Test-Signature$";
    CLAM_DOC_MALWARE = "^Doc\.Malware\..*";
    CLAM_HTML_PHISH = "^Html\.Phishing\..*";
    CLAM_HTML_EXPLOIT = "^Html\.Exploit\..*";
    CLAM_BROKEN_EXEC = "^Broken\.Executable.*";
    CLAM_WIN_WORM = "^Win.Worm.Mydoom-*";
    # Heuristics
    CLAM_HEUR_PHISHING =  "^Heuristics\.Phishing\.Email\.SpoofedDomain";
    CLAM_HEUR_OLE2_VBA_MACRO = "^Heuristics\.OLE2\.ContainsMacros$";
    CLAM_HEUR_ENCRYPTED = "^Heuristics\.Encrypted\..*";
    CLAM_HEUR_STRUCT_CC = "^Heuristics.Structured.CreditCardNumber$";

    CLAM_PUA_WIN = "^PUA\.Win\..*";
    CLAM_PUA_DOC = "^PUA\.Doc\..*";
    # ERROR not virus
    CLAM_LIMITS_EXCEEDED = "^Heuristics\.Limits\.Exceeded";
    # Extra Signatures
    CLAM_G_SAFEBROWSING = "^Heuristics.Safebrowsing.*";
    CLAM_PORCUPINE_JUNK = "^Porcupine\.Junk.*";
    CLAM_SANESEC_JURBL = "^Sanesecurity\.Jurlbl.*";
    CLAM_SANESEC_JUNK = "^Sanesecurity\.Junk.*";
    CLAM_SANESEC_BLURL = "^Sanesecurity\.Blurl.*";
    CLAM_SANESEC_SCAM = "^Sanesecurity\.Scam.*";
    CLAM_WINNOW_SPAM = "^winnow\.spam.*";
    CLAM_SECI_JS_PUA = "^PUA\.SecuriteInfo\.com\.JS\.Malware.*";
    CLAM_SECI_JS_AD = "^SecuriteInfo\.com\.JS\.AdInject.*";
    CLAM_SECI_JS_REDIR = "^SecuriteInfo\.com\.JS\.Redir.*";
    CLAM_SECI_SUSPICIOUS = "^SecuriteInfo\.com\.Suspicious.*"
    CLAM_SECI_HTML = "^SecuriteInfo\.com\.HTML.*";
    CLAM_SECI_PHIS = "^SecuriteInfo\.com\.Phish.*";
    CLAM_SECI_JPG = "^SecuriteInfo\.com\.JPG.*";
    CLAM_MP_EVILMACRO = "^MiscreantPunch.EvilMacro\..*";
    CLAM_YARA = "^YARA\..*\.UNOFFICIAL$";
  }

  # `whitelist` points to a map of IP addresses. Mail from these addresses is not scanned.
  whitelist = "/etc/rspamd/antivirus.wl";
}

sophos {
  #savdi_report_oversize = true;
  #savdi_report_encrypted = true;

  # Scan mime_parts seperately - otherwise the complete mail will be transfered to AV Scanner
  scan_mime_parts = true;
  scan_text_mime = true;
  scan_image_mime = false;

  symbol = "SOPHOS_VIRUS";
  type = "sophos";
  log_clean = true;
  servers = "127.0.0.1:4010";
  
  # if `patterns` is specified virus name will be matched against provided regexes and the related
  # symbol will be yielded if a match is found. If no match is found, default symbol is yielded.
  patterns {
    # symbol_name = "pattern";
    SOPHOS_JUST_EICAR = "^Eicar-Test-Signature$";
  }
  # `whitelist` points to a map of IP addresses. Mail from these addresses is not scanned.
  whitelist = "/etc/rspamd/antivirus.wl";
}
